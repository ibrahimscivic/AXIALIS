import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split

# Assuming you have a CSV file 'student_scores.csv' with columns 'Hours' and 'Scores'
data = pd.read_csv('https://raw.githubusercontent.com/AdiPersonalWorks/Random/master/student_scores%20-%20student_scores.csv')
# Display first few rows of the dataset
print(data.head())

# Splitting data into attributes (X) and labels (y)
X = data.iloc[:, :-1].values  # Hours
y = data.iloc[:, 1].values    # Scores

# Splitting the data into training and testing sets (80% train, 20% test)
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=0)


# Create a Linear Regression object
regressor = LinearRegression()

# Fit the model using the training data
regressor.fit(X_train, y_train)

# Plotting the regression line
line = regressor.coef_*X + regressor.intercept_

# Plotting for the test data
plt.scatter(X, y)
plt.plot(X, line)
plt.xlabel('Hours studied')
plt.ylabel('Percentage Score')
plt.title('Hours vs Percentage')
plt.show()


# Predicting scores for the test set
y_pred = regressor.predict(X_test)

# Compare actual vs predicted values
df = pd.DataFrame({'Actual': y_test, 'Predicted': y_pred})
print(df)

# Predict score for 9.25 hours
hours = np.array([[9.25]])
predicted_score = regressor.predict(hours)
print('Predicted score for 9.25 hours/day of study: {}'.format(predicted_score[0]))
